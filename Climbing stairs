You are climbing a staircase. It takes n steps to reach the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?

class Solution {
    public int climbStairs(int n) {
        int[] dp = new int[n + 1];
        for(int i=0; i<=n; i++) {
            dp[i] = -1;
        }

        return helper(n, dp);   
    }

    public int helper(int n, int[] dp) {
        if(n <= 1) {
            return 1;
        }
        if(dp[n] != -1) {
            return dp[n];
        }

        int left = helper(n-1, dp);
        int right = helper(n-2, dp);

        return dp[n] = left + right;
    }
}
