class Solution {

    static Boolean isSubsetSum(int arr[], int target) {
        int n = arr.length;
        Boolean[][] t = new Boolean[n+1][target + 1];
        
        boolean found = isSubSetSumHelper(arr, n, target, t);
        return found;
    }
    
    public static boolean isSubSetSumHelper(int[] arr, int n, int target, Boolean[][] t) 
    {
        if(target == 0) {
            return true;
        }
        if(n == 0) {
            return false;
        }
        
       if (t[n][target] != null) return t[n][target];
        
        if(arr[n-1] <= target) {
            t[n][target] =  isSubSetSumHelper(arr,  n-1, target, t) ||
                isSubSetSumHelper(arr, n-1, target - arr[n-1], t);
        } else if(arr[n-1] > target) {
            t[n][target] =  isSubSetSumHelper(arr, n-1, target, t);
        }
        return t[n][target];
    }
}
